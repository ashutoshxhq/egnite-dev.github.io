{"version":3,"sources":["components/Feature.tsx","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["Feature","props","title","children","icon","spacing","direction","base","md","fontSize","fontWeight","color","mode","App","useDisclosure","isOpen","onOpen","onClose","theme","flexDirection","display","minHeight","backgroundColor","width","borderBottomWidth","paddingLeft","paddingRight","maxWidth","marginLeft","justifyContent","padding","marginRight","src","height","sm","alignItems","href","target","as","colorScheme","marginInlineStart","onClick","aria-label","align","Hamburger","w","h","marginTop","templateColumns","gap","borderRadius","_hover","marginBottom","flex","minWidth","margin","ArrowForward","size","variant","lg","clipPath","objectFit","id","py","maxW","mx","px","pb","pt","textAlign","letterSpacing","mt","columns","spacingX","spacingY","background","lineHeight","textTransform","mr","boxShadow","border","borderTop","role","aria-current","rel","iconColor","my","marginStart","Date","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b0287249.chunk.js","sourcesContent":["import { Box, Stack, Text, useColorModeValue as mode } from '@chakra-ui/react'\r\nimport * as React from 'react'\r\n\r\ninterface FeatureProps {\r\n  title: string\r\n  children: string\r\n  icon: React.ReactElement\r\n}\r\n\r\nexport const Feature = (props: FeatureProps) => {\r\n  const { title, children, icon } = props\r\n  return (\r\n    <Stack spacing=\"6\" direction={{ base: 'column', md: 'row' }}>\r\n      <Box fontSize=\"6xl\">{icon}</Box>\r\n      <Stack spacing=\"1\">\r\n        <Text fontWeight=\"extrabold\" fontSize=\"lg\">\r\n          {title}\r\n        </Text>\r\n        <Box color={mode('gray.600', 'gray.400')}>{children}</Box>\r\n      </Stack>\r\n    </Stack>\r\n  )\r\n}","import * as React from \"react\"\nimport \"./styles.css\"\nimport {\n  ChakraProvider,\n  Box,\n  Text,\n  Link,\n  VStack,\n  Grid,\n  theme,\n  Image,\n  HStack,\n  IconButton,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  useDisclosure,\n  Button,\n  Heading,\n  SimpleGrid,\n  ButtonGroup,\n  Stack,\n  Flex\n} from \"@chakra-ui/react\"\nimport { ArrowForwardIcon, HamburgerIcon } from \"@chakra-ui/icons\"\nimport { Feature } from \"./components/Feature\"\nimport { FcIdea, FcPrivacy, FcServices, FcShop } from 'react-icons/fc'\nimport { FaGithub, FaLinkedin, FaTwitter } from \"react-icons/fa\"\n\nexport const App = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  return (\n    <ChakraProvider theme={theme}>\n      <Box flexDirection=\"column\" display=\"flex\" minHeight=\"100vh\">\n        <Box backgroundColor=\"rgb(255, 255, 255)\" width=\"100%\" borderBottomWidth={1}>\n          <Box paddingLeft=\"2rem\" paddingRight=\"2rem\" maxWidth=\"80rem\" marginLeft=\"auto\" display=\"flex\" justifyContent=\"space-between\" padding=\"1rem 1.5rem\" marginRight=\"auto\">\n            <Link><Image src=\"/egnite.svg\" height=\"2.5rem\"></Image></Link>\n            <Box display={{ base:\"none\",  sm: \"none\", md: \"flex\" }} alignItems=\"center\">\n              <HStack spacing=\"2rem\">\n                <Link fontWeight=\"600\" color=\"blue.500\">Home</Link>\n                <Link href=\"#features\" fontWeight=\"600\" color=\"rgb(74, 85, 104)\">Features</Link>\n                <Link href=\"https://egnite.dev/marketplace\"  target=\"_blank\"  fontWeight=\"600\" color=\"rgb(74, 85, 104)\">Marketplace</Link>\n                <Link href=\"https://egnite.dev/documentation\"  target=\"_blank\"  fontWeight=\"600\" color=\"rgb(74, 85, 104)\">Docs</Link>\n              </HStack>\n            </Box>\n            <Box display={{  base:\"none\",  sm: \"none\", md: \"flex\", }}>\n              <HStack spacing=\"2rem\">\n                <Link href=\"https://app.egnite.dev/login\"  target=\"_blank\"  fontWeight=\"600\" color=\"rgb(74, 85, 104)\">Login</Link>\n                <Button as={\"a\"} href=\"https://dw4b516oom0.typeform.com/to/amFe8E8d\" target=\"_blank\" colorScheme=\"blue\" marginInlineStart=\"2rem\">Get Early Access</Button>\n              </HStack>\n            </Box>\n            <Box display={{  base:\"flex\", sm: \"flex\", md: \"none\" }} alignItems=\"center\">\n              <Link onClick={onOpen} aria-label=\"menu icon\" display=\"flex\" align=\"center\"><HamburgerIcon w={6} h={6} /></Link>\n            </Box>\n            <Modal isOpen={isOpen} onClose={onClose}>\n              <ModalOverlay />\n              <ModalContent marginTop=\"1rem\">\n                <ModalHeader><Image src=\"/egnite.svg\" height=\"2rem\"></Image></ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                  <Grid templateColumns=\"repeat(2, 1fr)\" gap={2}>\n                    <Box w=\"100%\" padding=\"0.4rem\" borderRadius=\"0.2rem\" _hover={{ backgroundColor: \"gray.100\" }}><Link marginLeft=\"0.5rem\" fontWeight=\"600\" colorScheme=\"blue\"> Home</Link></Box>\n                    <Box w=\"100%\" padding=\"0.4rem\" borderRadius=\"0.2rem\" _hover={{ backgroundColor: \"gray.100\" }}><Link marginLeft=\"0.5rem\" fontWeight=\"600\" colorScheme=\"blue\"> Features</Link></Box>\n                    <Box w=\"100%\" padding=\"0.4rem\" borderRadius=\"0.2rem\" _hover={{ backgroundColor: \"gray.100\" }}><Link marginLeft=\"0.5rem\" fontWeight=\"600\" colorScheme=\"blue\"> Solutions</Link></Box>\n                    <Box w=\"100%\" padding=\"0.4rem\" borderRadius=\"0.2rem\" _hover={{ backgroundColor: \"gray.100\" }}><Link marginLeft=\"0.5rem\" fontWeight=\"600\" colorScheme=\"blue\"> Documentation</Link></Box>\n\n\n                  </Grid>\n                  <Button  as=\"a\" href=\"https://dw4b516oom0.typeform.com/to/amFe8E8d\" target=\"_blank\" marginTop=\"2rem\" w=\"100%\" colorScheme=\"purple\" onClick={onClose}>\n                    Start free trial\n                </Button>\n                  <HStack marginTop=\"1rem\" marginBottom=\"1rem\" justifyContent=\"center\" align=\"center\"><Text fontWeight=\"600\" color=\"rgb(74, 85, 104)\">Already Registered?</Text><Link fontWeight=\"600\" color=\"purple.500\"> Login</Link></HStack>\n                </ModalBody>\n\n\n              </ModalContent>\n            </Modal>\n          </Box>\n        </Box>\n        <Box display=\"flex\" flexDirection={{ base:\"column\", sm: \"column\", md: \"row\" }} justifyContent=\"center\" alignItems=\"center\" flex=\"1\">\n          <Box width={{  base:\"100%\", sm: \"100%\", md: \"50%\" }} padding=\"2rem\" height=\"100%\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\" >\n            <Box maxWidth=\"36rem\">\n              <Box display=\"inline-flex\" flexDirection=\"row\" alignItems=\"center\" backgroundColor=\"rgb(226, 232, 240)\" borderRadius=\"9999px\" padding=\"0.5rem\" minWidth=\"18rem\" marginBottom=\"2rem\" fontSize=\"0.875rem\">\n                <Box display=\"inline-flex\" flexDirection=\"row\" alignItems=\"center\" backgroundColor=\"green.500\" borderRadius=\"9999px\" padding=\"0 0.5rem\" fontWeight=\"700\" color=\"white\" fontSize=\"0.875rem\">New</Box>\n                <Text fontWeight=\"500\" margin=\"0 0.5rem\">Introduction to the new Egnite Api Builder</Text>\n                <ArrowForwardIcon margin=\"0 0.5rem\" />\n              </Box>\n              <Heading fontSize={{ md:\"3.75rem\", sm:\"2.7rem\", base:\"2.7rem\" }} fontWeight=\"800\">Build <Text display=\"inline\" color=\"rgb(49, 130, 206)\">REST and gRPC apis</Text> without writing code</Heading>\n              <Text fontSize=\"1.25rem\" color=\"rgb(74, 85, 104)\" fontWeight=\"500\" marginTop=\"1.5rem\">Egnite gives you the fastest api development experience, driven by its easy to use api builder and api marketplace.</Text>\n              <HStack marginTop=\"2rem\">\n                <Button  as=\"a\" href=\"https://dw4b516oom0.typeform.com/to/amFe8E8d\" target=\"_blank\" colorScheme=\"blue\" size=\"lg\">\n                  Get Early Access\n                </Button>\n                <Button size=\"lg\" variant=\"outline\">\n                  Watch Video\n                </Button>\n              </HStack>\n              <HStack marginTop=\"2rem\">\n                <Text>Already Registered ?</Text>\n                <Link href=\"https://app.egnite.dev/login\"  target=\"_blank\"  color=\"blue.500\">Login</Link>\n              </HStack>\n            </Box>\n          </Box>\n\n          <Box display={{ base:\"none\", sm: \"none\", lg: \"flex\" }} clipPath=\"polygon(8% 0%, 100% 0%, 100% 100%, 0% 100%)\" width={{ base:\"100%\", sm: \"100%\", md: \"50%\" }} height=\"100%\">\n            <Image src=\"/mockup.png\" width=\"100%\" height=\"calc(100vh - 72px)\" objectFit=\"cover\" />\n\n          </Box>\n        </Box>\n      </Box>\n      <Box  id=\"features\"  backgroundColor=\"white\" as=\"section\" py=\"24\">\n        <Box\n          maxW=\"2xl\"\n          mx=\"auto\"\n          px={{ base: '6', lg: '8' }}\n          pb={{ base: '16', sm: '20' }}\n          pt={\"1rem\"}\n          textAlign=\"center\"\n        >\n          <Heading as=\"h2\" size=\"3xl\" fontWeight=\"extrabold\" letterSpacing=\"tight\">\n            Why use Egnite?\n        </Heading>\n          <Text mt=\"4\" fontSize=\"lg\">\n          We give you all the tools that you need to build apis faster at scale.\n        </Text>\n\n        </Box>\n        <Box pb={\"4rem\"} maxW={{ base: 'xl', md: '5xl' }} mx=\"auto\" px={{ base: '6', md: '8' }}>\n          <SimpleGrid columns={{ base: 1, md: 2 }} spacingX=\"10\" spacingY=\"14\">\n            <Feature title=\"Easy to use Api Builder\" icon={<FcIdea />}>\n              Building your api with Egnite is just three simple steps. Define the schema, Import the functions you need and you are ready to export the code.\n          </Feature>\n            <Feature title=\"Marketplace Apis\" icon={<FcShop />}>\n              Egnite has a marketplace full of ready to use apis(functions & schemas) which you can import directly into your project and save 100s of hours of development time.\n          </Feature>\n\n            <Feature title=\"Authentication & Security\" icon={<FcPrivacy />}>\n              Egnite has support for different kinds of authentication mechanisms. So that you can secure and restrict access to your apis with ease. \n          </Feature>\n            <Feature title=\"Code Generation\" icon={<FcServices />}>\n              With the power of our code generation egnine, everything you build with Egnite can be exported as GO code, which you can deploy on any environment you see fit.\n          </Feature>\n          </SimpleGrid>\n        </Box>\n      </Box>\n\n\n      <Box as=\"section\" py=\"24\" display={{  base:\"none\",  sm: \"none\", md: \"flex\", }} background=\"rgb(237, 242, 247)\">\n        <Box maxWidth={{ base:\"36rem\", sm: \"36rem\", md: \"80rem\" }} mx={\"auto\"} px={\"1.5rem\"}>\n          <Grid templateColumns=\"380px 1fr\" gap={16}>\n            <Box>\n              <Heading fontWeight=\"800\" fontSize=\"3.75rem\" lineHeight=\"1\">Build Apis with <Text display=\"inline\" color=\"rgb(49, 130, 206)\">ease!</Text></Heading>\n              <Text marginTop=\"1.5rem\" marginBottom=\"2rem\" fontSize=\"1.125rem\" fontWeight=\"500\">Building an api with Egnite is as easy as filling out a form and pressing some buttons.</Text>\n              <Button  as=\"a\" href=\"https://dw4b516oom0.typeform.com/to/amFe8E8d\" target=\"_blank\" colorScheme=\"blue\" size=\"lg\">\n                Get Early Access <ArrowForwardIcon margin=\"0 0.5rem\" />\n              </Button>\n              <Box marginTop=\"4rem\" backgroundColor=\"white\" padding=\"2rem\" borderRadius=\"0.5rem\">\n                <Text textTransform=\"uppercase\" fontWeight=\"700\">User Feedback</Text>\n                <Text marginTop=\"1rem\" fontSize=\"1.125rem\" lineHeight=\"1.625\">“Using Egnite to build my application's backend was a delight, I did not know you could build gRPC and REST api's at this speed.”</Text>\n                <HStack alignItems=\"center\" justifyContent=\"flex-start\" mt={6}>\n                  <Image borderRadius=\"50rem\" src=\"/avatar.png\" h={6} mr={2} />\n                  <VStack alignItems=\"flex-start\" justifyContent=\"flex-start\" spacing={0}>\n                    <Text fontWeight=\"700\">Ashutosh Dubey</Text>\n                    <Text marginTop=\"0\">Software Engineer, CadenceIQ</Text>\n                  </VStack>\n                </HStack>\n              </Box>\n            </Box>\n            <Box display={{ md: \"block\", sm: \"none\",  base:\"none\" }}>\n              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" borderRadius=\"0.5rem\" backgroundColor=\"white\" minHeight=\"480px\" boxShadow=\"rgb(0 0 0 / 10%) 0px 10px 15px -3px, rgb(0 0 0 / 5%) 0px 4px 6px -2px\">\n                  <Image w={\"95%\"} src=\"/egif.gif\" borderRadius=\"0.5rem\" border=\"solid 3px #8080802b\"/>\n              </Box>\n              <HStack alignItems=\"flex-start\" mt={6}>\n                <Box padding=\"1rem\">\n                  <VStack alignItems=\"flex-start\">\n                    <Text fontWeight=\"700\">Create Schema</Text>\n                    <Text>Schema is a table with its relationship with other tables, So building the schema is just defining the fields and relationships assosiated with the tables in the application. </Text>\n                  </VStack>\n                </Box>\n                <Box padding=\"1rem\">\n                  <VStack alignItems=\"flex-start\">\n                    <Text fontWeight=\"700\">Import Functions</Text>\n                    <Text>Egnite has a marketplace of ready to use functions and schemas for different use cases which can be directly imported to the project to build you application on.</Text>\n                  </VStack>\n                </Box>\n                <Box padding=\"1rem\">\n                  <VStack alignItems=\"flex-start\">\n                    <Text fontWeight=\"700\">Deploy / Export Code</Text>\n                    <Text>Everything you build using Egnite can be exported as Go code which you can compile into a single binary and deploy it to any environment you see fit.</Text>\n                  </VStack>\n                </Box>\n              </HStack>\n            </Box>\n          </Grid>\n        </Box>\n        {/* <Box mt={\"6rem\"} maxWidth={{ sm: \"36rem\", md: \"80rem\" }} mx={\"auto\"} px={\"1.5rem\"}>\n          <Grid templateRows={{ md: \"none\", sm:\"repeat(2, 1fr)\" }}  templateColumns={{ md: \"60% 380px 1fr\", sm: \"none\" }} gap={16}>\n          <Box>\n              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" borderRadius=\"0.5rem\" backgroundColor=\"white\" minHeight=\"480px\" boxShadow=\"rgb(0 0 0 / 10%) 0px 10px 15px -3px, rgb(0 0 0 / 5%) 0px 4px 6px -2px\">\n\n              </Box>\n             \n            </Box>\n            <Box>\n              <Heading fontWeight=\"800\" fontSize=\"3.75rem\" lineHeight=\"1.2\">Marketplace of ready to use<Text display=\"inline\" color=\"rgb(49, 130, 206)\"> apis</Text></Heading>\n              <Text marginTop=\"1.5rem\" marginBottom=\"2rem\" fontSize=\"1.125rem\" fontWeight=\"500\">At volutpat diam ut venenatis tellus. Sit amet consectetur.</Text>\n              <Button colorScheme=\"blue\" size=\"lg\">\n                Get Early Access <ArrowForwardIcon margin=\"0 0.5rem\" />\n              </Button>\n             \n            </Box>\n            \n          </Grid>\n        </Box> */}\n      </Box>\n      <Box as=\"section\" backgroundColor=\"white\">\n        <Box\n          maxW=\"2xl\"\n          mx=\"auto\"\n          px={{ base: '6', lg: '8' }}\n          py={{ base: '16', sm: '20' }}\n          textAlign=\"center\"\n        >\n          <Heading as=\"h2\" size=\"3xl\" fontWeight=\"extrabold\" lineHeight=\"1.2\">\n            Ready to <Text display=\"inline\" color=\"rgb(49, 130, 206)\">build</Text> your <Text display=\"inline\" color=\"rgb(49, 130, 206)\">Apis</Text> with Egnite ?\n        </Heading>\n          <Text mt=\"4\" fontSize=\"lg\">\n          If yes then apply for the early access and we will reach out to you.\n        </Text>\n          <Flex flexDirection={{ md:\"row\", sm: \"column\", base:\"column\"}}  mt=\"8\" justifyContent=\"center\">\n            <Button as=\"a\" href=\"https://dw4b516oom0.typeform.com/to/amFe8E8d\" margin=\"10px\" target=\"_blank\" size=\"lg\" colorScheme=\"blue\" fontWeight=\"bold\">\n              Get Early Access\n            </Button>\n            <Button as=\"a\" href=\"https://egnite.dev/documentation\" margin=\"10px\" target=\"_blank\"   size=\"lg\" fontWeight=\"bold\" variant=\"outline\">\n              Documentation <ArrowForwardIcon margin=\"0 0.5rem\" />\n            </Button>\n          </Flex>\n\n        </Box>\n      </Box>\n      <Box as=\"footer\" backgroundColor=\"white\" borderTop=\"solid 1px #80808014\" role=\"contentinfo\" py=\"6\">\n        <Flex\n          direction={{ base: 'column', md: 'row' }}\n          maxW={{ base: 'xl', md: '7xl' }}\n          mx=\"auto\"\n          px={{ base: '6', md: '8' }}\n          align=\"center\"\n        >\n          <a aria-current=\"page\" aria-label=\"Back to Home page\" href=\"/\" rel=\"home\">\n            <Image src=\"/egnite-logo.svg\" h=\"6\" iconColor=\"blue.600\" />\n          </a>\n          <Stack\n            my={{ base: '6', md: 0 }}\n            direction={{ base: 'column', md: 'row' }}\n            marginStart={{ md: '8' }}\n            fontSize=\"sm\"\n            spacing={{ base: '2', md: '8' }}\n            textAlign={{ base: 'center', md: 'start' }}\n          >\n            <Text>&copy; {new Date().getFullYear()} Egnite Technology</Text>\n            <Link>Privacy</Link>\n            <Link>Terms and Conditions</Link>\n          </Stack>\n          <ButtonGroup marginStart={{ md: 'auto' }} color=\"gray.600\" variant=\"ghost\">\n            <IconButton as=\"a\" href=\"https://www.linkedin.com/company/egnite-dev\" target=\"_blank\" aria-label=\"LinkedIn\" icon={<FaLinkedin />} />\n            <IconButton as=\"a\" href=\"https://github.com/egnite-dev\" target=\"_blank\" aria-label=\"Github\" icon={<FaGithub />} />\n            <IconButton as=\"a\" href=\"https://twitter.com/egnitedev\" target=\"_blank\" aria-label=\"Twitter\" icon={<FaTwitter />} />\n          </ButtonGroup>\n        </Flex>\n      </Box>\n    </ChakraProvider>\n  )\n}\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ColorModeScript } from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { App } from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}